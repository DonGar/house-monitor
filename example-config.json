{

  // General server side configuration.
  "server": {

    // Optional, Port to serve from (8080 is default)
    "port": 1234,

    // Directory in which downloaded files are saved.
    "downloads": "<directory_name>",

    // Local timezone on the server. Used for time based rules.
    "timezone": "US/Pacific",

    // Latitude/Longitude of the server. Used to find sunrise/sunset times.
    "latitude": "37.3861",
    "longitude": "-122.0839",

    "email_address": "<default_address_email_actions>"
  },

  //
  // This defines handlers for buttons with ids.
  //
  // http://server/button?id=foo  <uses default action 'pushed' if present>
  // http://server/button?id=foo?action=action_name
  //
  // When a button is invoked the field "pushed" will be updated with the
  // current time.
  //
  "button": {
    "<button_name>": {
      "actions": {
        "action_name": <action>
        ...
      }
    },
  },

  // Definitions of camera feeds to display on the website.
  "camera": {
    "<name>": {
      "<hostname>": "<fqdn>", // Defaults to 'name'
      "actions": {
        "action_name": <action>
        ...
      }
    },
    ...
  },

  //
  // Each hostname should map do a dictionary.
  // Each host will be pinged frequently. The value "up" in the
  // dictionary will be updated with True or False based on the
  // result of the pinging.
  //
  // If the values "wake", and "sleep" are present, the URLs values
  // they have will be redirected to response to:
  //   host?id=<id>&command=<wake|sleep>
  //
  "host": {
    "<name>": {
      "<hostname>": "<fqdn>",
      "address": "<snapshot_url>",
      "actions": {
        "action_name": <action>
        ...
      }
    },
    ...
  },

  "rule": {
    "react": {
      // If the status changes, fire the action.
      "behavior": "watch",
      "value": "status://some/status",
      "trigger": <any_json_value>, // optional, only fire if changes to trigger.
      "action": <action>
    },
    "once_a_day": {
      // Request a URL on a repeating interval.
      "behavior": "daily",
      "time": "sunset", // "sunset", "sunrise", "12:34:56"
      "action": <action>
    },
    "all_day_long": {
      // Request a URL on a repeating interval.
      "behavior": "interval",
      "time": "00:05:00", // Repeat every X time periods from previous midnight.
      "action": <action>
    }
  }
}


// Actions

// A status URL means perform an action from another location in status.
"status://path/to/action",

// An external URL is a shortcut version of "fetch_url" with no download_name.
"http://some_wonderful/url",

// A list contains a list of actions to be performed sequentially.
[<action>, ...]

{
  // Fetch the URL listed.
  //
  // If a download_name is present, save contents in directory
  // specified by config://server/downloads.
  //
  // The field {time} (if present) will be replaced with the results of
  // time.time().
  //
  "action": "fetch_url",
  "url": "http://wonderful/url",
  "download_name": "test-{time}.txt"   // Optional
},
{
  // Set data into a status URL. Either copy from src, or from value.
  "action": "set",
  "src": "status://status/location",   // "src" OR "value", not both.
  "value": <any_json_value>,
  "dest": "status://status/location/"
},
{
  "action": "wol",
  "mac": "11:22:33:44:55:66"
},
{
  "action": "ping",
  "hostname": "<hostname>",
  "dest": "status://where/to/update"
},
{
  "action": "email",

  "to": "",                      // Defaults to server/default_email
  "subject": "",                 // Default ""
  "body": "",                    // Default ""
  "attachments": [               // Optional section.
    {
      "url": "http://resource/url",
      "download_name": "foo.{time}.jpg",
      "preserve": true           // Do we keep a copy in downloads
                                 //   default true.
    }
  ]
}
