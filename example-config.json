{

  // General server side configuration.
  "server": {

    // Port to serve from (8080 is default)
    "port": 1234,

    // Directory in which downloaded files are saved.
    "downloads": "<directory_name>",

    // Local timezone on the server. Used for url download times.
    "timezone": "US/Pacific",

    // Latitude/Longitude of the server. Used to find sunset/sunrise times.
    "latitude": "37.3861",
    "longitude": "-122.0839",

    // Settings used to send email.
    "email": {
      "server": "smtp.gmail.com",
      "port": 587,
      "user": "foo@gmail.com",
      "password": "",  // For GMail, I suggest an Application Specific Password
      "from": "foo@gmail.com",
      "to": "foo@gmail.com"
    }
  },

  //
  // This defines handlers for buttons with ids.
  //
  // http://server/button?id=foo
  // http://server/button?id=foo?action=on
  // http://server/button?id=foo?action=off
  //
  // 'foo' isn't present in this list, that's an error.
  //
  // When a button is invoked the field "pushed" will be updated with the
  // current time.
  //
  // When a button is pushed, the field "state" will be set to true or false
  // based on the action of "on" or "off". Default action is "on".
  //
  "buttons": {
    "basic": {
    },
    "prepopulated": {
      "pushed": 123,
      "state": false
    }
  },

  // Definitions of camera feeds to display on the website.
  "cameras": {
    "<name>": {
      "address": "<snapshot_url>",
    },
  },

  // http://server/email_action?id=foo
  "emails": {
    "foo": {
        "to": "",  // If not present, defaults to server/email/to
        "subject": "",
        "body": "",
        "attachment": [
          {
            "url": "http://resource/url",
            "archive_name": "foo.{time}.jpg"
          }
        ]
      }
  },

  //
  // Each hostname should map do a dictionary.
  // Each host will be pinged frequently. The value "up" in the
  // dictionary will be updated with True or False based on the
  // result of the pinging.
  //
  // If the values "wake", and "sleep" are present, the URLs values
  // they have will be redirected to response to:
  //   host?id=<id>&command=<wake|sleep>
  //
  "hosts": {
    "<hostname>": {
      "action": {
        "wake": "wake_handler?target=00:25:22:CF:01:31",
        "sleep": "http://foo/bar"
      }
    },
    "<hostname>": {}
  },

  // URLs to download on a regular base.
  // interval:
  //   "daily" means do something once a day.
  //
  //   "interval" means do something every X time duration measured from
  //              midnight of the current day.
  //
  // time:
  //   "sunset", "sunrise", and "12:00:00" are currently supported.
  //   12:00:00 will be handled based on the local timezone.
  //
  // url:
  //   url to request. The results are discarded if download_name not
  //   present.
  //
  // download_name: (optional)
  //   filename to save the downloaded results into. It should contain a
  //   '%d' which will be replaced with a timestamp at each download.
  //   The downloaded file will be stored in the downloads directory
  //   specified above.

  "requests": [
    {
      "interval": "daily",
      "time": "sunset",
      "url": "http://kitchen/decoder_control.cgi?user=guest&pwd=&command=95",
      "comment": "Enable Kitchen camera's IR at Sunset.",
    },
    {
      "interval": "daily",
      "time": "12:00:00",
      "url": "http://kitchen/snapshot.cgi?user=guest&pwd=",
      "download_name": "daily.{time}.jpg",
      "comment": "Take a snapshot of the front door at noon.",
    },
  ],

  "rules": [
    {
      // Mirror the field in the status to another field in the status.
      "behavior": "mirror",
      "src": "status://hosts/<hostname>/up",
      "dest": "status://buttons/combined/light"
    },
    {
      // Request a URL on a repeating interval.
      "behavior": "daily",
      "time": "sunset", // "sunset", "sunrise", "12:34:56"
      "url": "http://wonderful/url"
    },
    {
      // Request a URL on a repeating interval.
      "behavior": "interval",
      "time": "00:05:00", // Repeat all day every X time periods.
      "url": "http://wonderful/url",
      "download_name": "test-{time}.txt"
    }
  ]
}
